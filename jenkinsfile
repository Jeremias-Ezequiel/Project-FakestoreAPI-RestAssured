pipeline{
    agent any 

    environment{
        REPO = 'https://github.com/Jeremias-Ezequiel/Project-FakestoreAPI-RestAssured.git'
        BRANCH = 'gh-pages'
        ALLURE_DIR = 'allure-reports'
        SITE_DIR = 'target/gh-pages'
    }

    stages{
        stage('Build'){
            steps{
                bat './mvnw clean compile'
            }
        }
        stage('Test'){
            steps{
                bat './smokeTest.bat'
            }
        }
        stage('Generate Allure Report'){
            steps{
                allure includeProperties: false, jdk: '', results: [[path: 'target/allure-results']] 
                bat 'allure generate target/allure-results -o target/allure-report --clean'
            }
        }
        stage('Deploy to GitHub Pages'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'github-credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                bat """
                        rem Configurar Git
                        git config --global user.name "Jenkins"
                        git config --global user.email "jenkins@example.com"
                        git config --global core.autocrlf true

                        rem Limpiar el directorio existente
                        rmdir /S /Q ${SITE_DIR} || exit 0

                        rem Inicializar un nuevo repositorio local
                        git init
                        git remote add origin ${REPO}
                        git fetch origin || true

                        rem Crear o cambiar a la rama gh-pages
                        git checkout -b ${BRANCH} || git checkout ${BRANCH}

                        rem Crear el directorio destino si no existe
                        mkdir ${SITE_DIR}/${ALLURE_DIR}/${BUILD_NUMBER}

                        rem Copiar los archivos del reporte
                        xcopy /E /I /Y "target/allure-report/*" "${SITE_DIR}/${ALLURE_DIR}/${BUILD_NUMBER}/"

                        rem Agregar, confirmar y subir los cambios
                        cd ${SITE_DIR}
                        git add .
                        git commit -m "Add Allure report for build ${BUILD_NUMBER}" || echo "No changes to commit"
                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Jeremias-Ezequiel/Project-FakestoreAPI-RestAssured.git ${BRANCH} --force
                    """
                }
            }
        }
    }
    post{
        always{
            always{
                cleanWs()       
            }
        }
    }
}